(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{406:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"eq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eq"}},[t._v("#")]),t._v(" eq")]),t._v(" "),e("h2",{attrs:{id:"description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),e("p",[t._v("执行 "),e("a",{attrs:{href:"https://262.ecma-international.org/6.0/#sec-samevaluezero",target:"_blank",rel:"noopener noreferrer"}},[t._v("SameValueZero"),e("OutboundLink")],1),t._v(" 比较两者的值，来确定它们是否相等")]),t._v(" "),e("h2",{attrs:{id:"params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#params"}},[t._v("#")]),t._v(" Params")]),t._v(" "),e("p",[e("code",[t._v("(value, other)")])]),t._v(" "),e("blockquote",[e("p",[t._v("value : 要比较的值")]),t._v(" "),e("p",[t._v("other ： 另一个要比较的值")])]),t._v(" "),e("h2",{attrs:{id:"return"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#return"}},[t._v("#")]),t._v(" Return")]),t._v(" "),e("p",[e("code",[t._v("Boolean")])]),t._v(" "),e("h2",{attrs:{id:"code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code"}},[t._v("#")]),t._v(" Code")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" other "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" other "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" other"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"analyze"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#analyze"}},[t._v("#")]),t._v(" Analyze")]),t._v(" "),e("ol",[e("li",[t._v("整个 "),e("code",[t._v("eq")]),t._v(" 方法就只有一行代码，执行 "),e("a",{attrs:{href:"https://262.ecma-international.org/6.0/#sec-samevaluezero",target:"_blank",rel:"noopener noreferrer"}},[t._v("SameValueZero"),e("OutboundLink")],1),t._v(" 规范")]),t._v(" "),e("li",[t._v("首先 "),e("code",[t._v("value === other")]),t._v("， 符合 "),e("a",{attrs:{href:"https://262.ecma-international.org/7.0/#sec-strict-equality-comparison",target:"_blank",rel:"noopener noreferrer"}},[t._v("Strict Equality Comparison"),e("OutboundLink")],1),t._v(" 规范")]),t._v(" "),e("li",[t._v("Strict Equality Comparison 和 SameValueZero 两者只有在 "),e("code",[t._v("NaN")]),t._v(" 的处理上有不同，所以就有了 "),e("code",[t._v("value !== value && other !== other")])]),t._v(" "),e("li",[t._v("在 "),e("code",[t._v("JavaScript")]),t._v(" 中 只有 "),e("code",[t._v("NaN")]),t._v(" 和自身是不相等的，所以 在这里 如果传入的是 "),e("code",[t._v("NaN")]),t._v(", 则返回 "),e("code",[t._v("true")])])]),t._v(" "),e("h2",{attrs:{id:"remark"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remark"}},[t._v("#")]),t._v(" Remark")]),t._v(" "),e("ol",[e("li",[e("RouterLink",{attrs:{to:"/other/same.html"}},[t._v("关于JavaScript中的一些对比规范")])],1),t._v(" "),e("li",[t._v("使用 其他方法 也可以判断两个值是否相等，")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/is",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.is()"),e("OutboundLink")],1),t._v(" 方法判断两个值是否为同一个值。如果满足以下条件则两个值相等:")]),t._v(" "),e("ol",[e("li",[t._v("都是 "),e("code",[t._v("undefined")])]),t._v(" "),e("li",[t._v("都是 "),e("code",[t._v("null")])]),t._v(" "),e("li",[t._v("都是 "),e("code",[t._v("true")]),t._v(" 或 "),e("code",[t._v("false")])]),t._v(" "),e("li",[t._v("都是相同长度的字符串且相同字符按相同顺序排列")]),t._v(" "),e("li",[t._v("都是相同对象（意味着每个对象有同一个引用）")]),t._v(" "),e("li",[t._v("都是数字且\n"),e("ul",[e("li",[t._v("都是 "),e("code",[t._v("+0")])]),t._v(" "),e("li",[t._v("都是 "),e("code",[t._v("-0")])]),t._v(" "),e("li",[t._v("都是 "),e("code",[t._v("NaN")])]),t._v(" "),e("li",[t._v("或都是非零而且非 "),e("code",[t._v("NaN")]),t._v(" 且为同一个值")])])])]),t._v(" "),e("p",[t._v("与 "),e("code",[t._v("==")]),t._v(" 运算不同。  "),e("code",[t._v("==")]),t._v(' 运算符在判断相等前对两边的变量 (如果它们不是同一类型) 进行强制转换 (这种行为的结果会将 "" '),e("code",[t._v("==")]),t._v(" "),e("code",[t._v("false")]),t._v(" 判断为 "),e("code",[t._v("true")]),t._v("), 而 "),e("code",[t._v("Object.is")]),t._v(" 不会强制转换两边的值。")]),t._v(" "),e("p",[t._v("与 "),e("code",[t._v("===")]),t._v(" 运算也不相同。 "),e("code",[t._v("===")]),t._v(" 运算符 (也包括 "),e("code",[t._v("==")]),t._v(" 运算符) 将数字 "),e("code",[t._v("-0")]),t._v(" 和 "),e("code",[t._v("+0")]),t._v(" 视为相等 ，而将 "),e("code",[t._v("Number.NaN")]),t._v(" 与 "),e("code",[t._v("NaN")]),t._v("视为不相等.")]),t._v(" "),e("p",[t._v("SameValueZero 对于 "),e("code",[t._v("+0")]),t._v(" 和 "),e("code",[t._v("-0")]),t._v(" 返回的是 "),e("code",[t._v("true")]),t._v("，而 "),e("code",[t._v("Object.is")]),t._v(" 对于 "),e("code",[t._v("+0")]),t._v(" 和 "),e("code",[t._v("-0")]),t._v(" 返回的是 "),e("code",[t._v("false")]),t._v("，所以 "),e("code",[t._v("eq")]),t._v(" 不能直接用 "),e("code",[t._v("Object.is")]),t._v(" 代替， 可改成如下")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" other "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" Object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/isNaN",target:"_blank",rel:"noopener noreferrer"}},[t._v("isNaN()"),e("OutboundLink")],1),t._v(" 来检测是否为 NaN 也是不可用的，因为")]),t._v(" "),e("p",[t._v("如果 "),e("code",[t._v("isNaN")]),t._v(" 函数的参数不是 "),e("code",[t._v("Number")]),t._v(" 类型， "),e("code",[t._v("isNaN")]),t._v(" 函数会首先尝试将这个参数转换为数值，然后才会对转换后的结果是否是 "),e("code",[t._v("NaN")]),t._v(" 进行判断。因此，对于能被强制转换为有效的非 "),e("code",[t._v("NaN")]),t._v(" 数值来说（空字符串和布尔值分别会被强制转换为数值 0 和 1），返回 "),e("code",[t._v("false")]),t._v(' 值也许会让人感觉莫名其妙。比如说，空字符串就明显 “不是数值（not a number）”。这种怪异行为起源于："不是数值（not a number）" 在基于 IEEE-754 数值的浮点计算体制中代表了一种特定的含义。'),e("code",[t._v("isNaN")]),t._v(" 函数其实等同于回答了这样一个问题：被测试的值在被强制转换成数值时会不会返回 IEEE-754​中所谓的 “不是数值（not a number）”")]),t._v(" "),e("p",[t._v("使用 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Number.isNaN()"),e("OutboundLink")],1),t._v(" 可以来判断是否 为 "),e("code",[t._v("NaN")])]),t._v(" "),e("p",[t._v("和全局函数 "),e("code",[t._v("isNaN()")]),t._v(" 相比，"),e("code",[t._v("Number.isNaN()")]),t._v(" 不会自行将参数转换成数字，只有在参数是值为 "),e("code",[t._v("NaN")]),t._v(" 的数字时，才会返回 "),e("code",[t._v("true")]),t._v("。")]),t._v(" "),e("p",[t._v("因此 "),e("code",[t._v("eq")]),t._v(" 也可以写成如下")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" other "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" Number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("other"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" object "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" other "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("eq")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);