(window.webpackJsonp=window.webpackJsonp||[]).push([[403],{761:function(t,e,a){"use strict";a.r(e);var v=a(42),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"same"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#same"}},[t._v("#")]),t._v(" same")]),t._v(" "),a("h2",{attrs:{id:"samevaluenonnumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#samevaluenonnumber"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://262.ecma-international.org/7.0/#sec-samevaluenonnumber",target:"_blank",rel:"noopener noreferrer"}},[t._v("SameValueNonNumber"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("这个规范规定比较的值 x 和 y 都不为 Number 类型，规范如下：")]),t._v(" "),a("ol",[a("li",[t._v("x 的类型不为 Number 类型")]),t._v(" "),a("li",[t._v("y 的类型与 x 的类型一致")]),t._v(" "),a("li",[t._v("如果 x 的类型为 Undefined ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 的类型为 Null ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 的类型为 String，并且 x 和 y 完全相同的代码单元序列 (相同的长度和相应索引处相同的代码单元) ，则返回 true; 否则返回 false")]),t._v(" "),a("li",[t._v("如果 x 的类型为 Boolean ，并且 x 和 y 同为 true 或同为 false ，返回 true，否则返回 false")]),t._v(" "),a("li",[t._v("如果 x 的类型为 Symbol ，并且 x 和 y 具有相同的 Symbol 值，返回 true，否则返回 false")]),t._v(" "),a("li",[t._v("如果 x 和 y 指向同一个对象，返回 true， 否则返回 false")])]),t._v(" "),a("h2",{attrs:{id:"strict-equality-comparison"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strict-equality-comparison"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://262.ecma-international.org/7.0/#sec-strict-equality-comparison",target:"_blank",rel:"noopener noreferrer"}},[t._v("Strict Equality Comparison"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("JavaScript 中的全等（===）遵循这个规范，：")]),t._v(" "),a("ol",[a("li",[t._v("如果 x 和 y 的类型不同，返回 false")]),t._v(" "),a("li",[t._v("如果 x 的为 Number 类型：\n"),a("ul",[a("li",[t._v("如果 x 为 NaN ，返回 false")]),t._v(" "),a("li",[t._v("如果 y 为 NaN ，返回 false")]),t._v(" "),a("li",[t._v("如果 x 和 y 的数值一致，返回 true")]),t._v(" "),a("li",[t._v("如果 x 为 +0 并且 y 为 -0 ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 为 -0 并且 y 为 +0 ，返回 true")]),t._v(" "),a("li",[t._v("返回 false")])])]),t._v(" "),a("li",[t._v("按照 SameValueNonNumber 的结果返回")])]),t._v(" "),a("h2",{attrs:{id:"samevalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#samevalue"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://262.ecma-international.org/7.0/#sec-samevalue",target:"_blank",rel:"noopener noreferrer"}},[t._v("SameValue"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("内部比较抽象操作 SameValue (x，y) ，其中 x 和 y 是 ECMAScript 语言值，生成 true 或 false。规范如下：")]),t._v(" "),a("ol",[a("li",[t._v("如果 x 和 y 的类型不同，返回 false")]),t._v(" "),a("li",[t._v("如果 x 的类型为 Number\n"),a("ul",[a("li",[t._v("如果 x 为 NaN 并且 y 为 NaN ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 为 +0 并且 y 为 -0 ，返回 false")]),t._v(" "),a("li",[t._v("如果 x 为 -0 并且 y 为 +0 ， 返回 false")]),t._v(" "),a("li",[t._v("如果 x 和 y 的数值一致，返回 true")]),t._v(" "),a("li",[t._v("返回 false")])])]),t._v(" "),a("li",[t._v("按照 SameValueNonNumber 的结果返回")])]),t._v(" "),a("h2",{attrs:{id:"samevaluezero"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#samevaluezero"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://262.ecma-international.org/7.0/#sec-samevaluezero",target:"_blank",rel:"noopener noreferrer"}},[t._v("SameValueZero"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("如果 x 和 y 的类型不同，返回 false")]),t._v(" "),a("li",[t._v("如果 x 的类型为 Number\n"),a("ul",[a("li",[t._v("如果 x 为 NaN 并且 y 为 NaN ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 为 +0 并且 y 为 -0 ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 为 -0 并且 y 为 +0 ， 返回 true")]),t._v(" "),a("li",[t._v("如果 x 和 y 的数值一致，返回 true")]),t._v(" "),a("li",[t._v("返回 false")])])]),t._v(" "),a("li",[t._v("按照 SameValueNonNumber 的结果返回")])]),t._v(" "),a("blockquote",[a("p",[t._v("SameValueZero 与 SameValue 的区别仅在于它对 + 0 和 - 0 的处理")])]),t._v(" "),a("h2",{attrs:{id:"abstract-equality-comparison"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract-equality-comparison"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://262.ecma-international.org/7.0/#sec-abstract-equality-comparison",target:"_blank",rel:"noopener noreferrer"}},[t._v("Abstract Equality Comparison"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("标准相等操作符 (== and !=)")]),t._v(" "),a("ol",[a("li",[t._v("如果 x 和 y 的类型相同，会返回 Strict Equality Comparison 的执行结果")]),t._v(" "),a("li",[t._v("如果 x 为 null ， y 为 undefined ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 为 undefined， y 为 null ，返回 true")]),t._v(" "),a("li",[t._v("如果 x 是 Number，y 是 String，则将 y 转为 Number，x y 进行比较，返回比较结果")]),t._v(" "),a("li",[t._v("如果 x 是 String，y 是 Number，则将 x 转为 Number，x y 进行比较，返回比较结果")]),t._v(" "),a("li",[t._v("如果 x 是 Boolean，则将 x 转为 Number，x y 进行比较，返回比较结果")]),t._v(" "),a("li",[t._v("如果 y 是 Boolean，则将 y 转为 Number，x y 进行比较，返回比较结果")]),t._v(" "),a("li",[t._v("如果 x 是 String、 Number 或 Symbol，y 是 Object，将 y 转为原始类型，x y 进行比较，返回比较结果")]),t._v(" "),a("li",[t._v("如果 x 是 Object，y 是 String、 Number 或 Symbol，将 x 转为原始类型，x y 进行比较，返回比较结果")]),t._v(" "),a("li",[t._v("返回 false")])]),t._v(" "),a("h2",{attrs:{id:"特别的一点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特别的一点"}},[t._v("#")]),t._v(" 特别的一点")]),t._v(" "),a("p",[a("code",[t._v(">")]),t._v(" "),a("code",[t._v("<")]),t._v(" "),a("code",[t._v(">=")]),t._v(" "),a("code",[t._v("<=")]),t._v(" 并不适用于上述规则")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("那么下一个问题，")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("返回的结果应该是什么")]),t._v(" "),a("p",[t._v("答案是 "),a("code",[t._v("false")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("null > 0")]),t._v(" 的判断中， js 尝试将 "),a("code",[t._v("null")]),t._v(" 转换为 数字，也就是 0 ，此时 "),a("code",[t._v("0 > 0")]),t._v(" 是 "),a("code",[t._v("false")]),t._v("\n在 "),a("code",[t._v("null >= 0")]),t._v(" 的判断中，也是如此，会转为 0，所以 "),a("code",[t._v("null >= 0")]),t._v(" 是 "),a("code",[t._v("true")])]),t._v(" "),a("p",[t._v("但是 "),a("code",[t._v("null == 0")]),t._v(",并不适用此转换规则")]),t._v(" "),a("p",[a("code",[t._v(">")]),t._v(" "),a("code",[t._v("<")]),t._v(" "),a("code",[t._v(">=")]),t._v(" "),a("code",[t._v("<=")]),t._v(" 适用 "),a("a",{attrs:{href:"https://tc39.es/ecma262/#sec-abstract-relational-comparison",target:"_blank",rel:"noopener noreferrer"}},[t._v("Abstract Relational Comparison"),a("OutboundLink")],1),t._v(" ,简单翻译就是")]),t._v(" "),a("ol",[a("li",[t._v("首先，使用 Symbol.ToPrimitive 将对象转换为原始值")]),t._v(" "),a("li",[t._v("如果两个值都是字符串，则根据它们所包含的 Unicode码点 的值，将它们作为字符串进行比较。")]),t._v(" "),a("li",[t._v("否则 JavaScript 会尝试将非数字类型转换为数值。\n"),a("ul",[a("li",[t._v("布尔值 tru e和 false 分别转换为 1 和 0。")]),t._v(" "),a("li",[t._v("null 被转换为 0")]),t._v(" "),a("li",[t._v("undefined 被转换为 NaN。")]),t._v(" "),a("li",[t._v("字符串根据其包含的值进行转换，如果不包含数值，则转换为 NaN。")])])]),t._v(" "),a("li",[t._v("如果任何一个值是 NaN，运算符返回 false。")]),t._v(" "),a("li",[t._v("否则，数值将作为数值进行比较。")])]),t._v(" "),a("h2",{attrs:{id:"和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和"}},[t._v("#")]),t._v(" == 和 ===")]),t._v(" "),a("p",[a("code",[t._v("===")])]),t._v(" "),a("ul",[a("li",[t._v("如果操作数的类型不同，则返回 false。")]),t._v(" "),a("li",[t._v("如果两个操作数都是对象，只有当它们指向同一个对象时才返回 true。")]),t._v(" "),a("li",[t._v("如果两个操作数都为 null，或者两个操作数都为 undefined，返回 true。")]),t._v(" "),a("li",[t._v("如果两个操作数有任意一个为 NaN，返回 false。")]),t._v(" "),a("li",[t._v("否则，比较两个操作数的值：\n"),a("ul",[a("li",[t._v("数字类型必须拥有相同的数值。+0 和 -0 会被认为是相同的值。")]),t._v(" "),a("li",[t._v("字符串类型必须拥有相同顺序的相同字符。")]),t._v(" "),a("li",[t._v("布尔运算符必须同时为 true 或同时为 false。")])])])]),t._v(" "),a("p",[t._v("全等运算符与相等运算符（==）最显著的区别是，如果操作数的类型不同，"),a("code",[t._v("==")]),t._v(" 运算符会在比较之前尝试将它们转换为相同的类型")]),t._v(" "),a("table",{staticClass:"standard-table"},[a("thead",[a("tr",[a("th",{attrs:{scope:"row"}}),t._v(" "),a("th",{staticStyle:{"text-align":"center"},attrs:{colspan:"7",scope:"col"}},[t._v("被比较值 B")])])]),t._v(" "),a("tbody",[a("tr",[a("th",{attrs:{scope:"row"}}),t._v(" "),a("td"),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Undefined")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Object")])]),t._v(" "),a("tr",[a("th",{attrs:{colspan:"1",rowspan:"6",scope:"row"}},[t._v(" 被比较值 A")]),t._v(" "),a("td",[t._v("Undefined")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("IsFalsy(B)")])]),t._v(" "),a("tr",[a("td",[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("IsFalsy(B)")])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A === B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A === ToNumber(B)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A=== ToNumber(B) ")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A== ToPrimitive(B)")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToNumber(A) === B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A === B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToNumber(A) === ToNumber(B)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToPrimitive(B) == A")])]),t._v(" "),a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToNumber(A) === B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToNumber(A) === ToNumber(B)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A === B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToNumber(A) == ToPrimitive(B)")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("font",{attrs:{face:"Consolas, Liberation Mono, Courier, monospace"}},[t._v("false")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("font",{attrs:{face:"Consolas, Liberation Mono, Courier, monospace"}},[t._v("false")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToPrimitive(A) == B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToPrimitive(A) == B")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ToPrimitive(A) == ToNumber(B)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("p",[t._v("A === B")])])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);